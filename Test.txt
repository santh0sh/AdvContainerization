-- Rename the existing table to a more meaningful name
ALTER TABLE CDS.TB_CDS_BULK_MAILCODE_ERROR_LOG 
RENAME TO CDS.TB_USER_UPDATE_LOG;

-- Drop the existing trigger
DROP TRIGGER CDS.TB_CDS_BULK_MAILCODE_ERROR_LOG_TRIGGER;

-- Drop the existing sequence
DROP SEQUENCE CDS.TB_CDS_BULK_MAILCODE_ERROR_LOG_SEQ;

-- Alter the renamed table to match the new structure
ALTER TABLE CDS.TB_USER_UPDATE_LOG 
ADD (
    UPDATED_BY VARCHAR2(50 BYTE),
    DETAILS CLOB,  -- Stores JSON structured data
    STATUS VARCHAR2(20 BYTE) CHECK (STATUS IN ('Success', 'Failure')),
    FAILURE_REASON VARCHAR2(255 BYTE),
    UPDATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP
);

-- Modify columns if necessary to ensure consistency
ALTER TABLE CDS.TB_USER_UPDATE_LOG 
MODIFY UPLOAD_DATE TIMESTAMP DEFAULT SYSTIMESTAMP;

-- Create a new sequence for auto-incrementing the ID column
CREATE SEQUENCE CDS.TB_USER_UPDATE_LOG_SEQ
START WITH 1000
INCREMENT BY 1
NOMAXVALUE
NOCYCLE
NOCACHE
NOORDER;

-- Recreate the trigger for auto-increment
CREATE OR REPLACE TRIGGER CDS.TB_USER_UPDATE_LOG_TRIGGER
BEFORE INSERT ON CDS.TB_USER_UPDATE_LOG
FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        SELECT CDS.TB_USER_UPDATE_LOG_SEQ.NEXTVAL
        INTO :NEW.ID FROM DUAL;
    END IF;
END;
/
